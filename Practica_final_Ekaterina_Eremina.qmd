---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste("El dataframe tiene", nrow(df_seeds), "filas y", ncol(df_seeds), "columnas.")
```

#### PREGUNTA 2

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
tipos <- c('Kama', 'Rosa', 'Canadian')
df_seeds$tipo <- factor(df_seeds$tipo, labels = tipos)
```

#### PREGUNTA 3

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
df_media <- df_seeds |> group_by(tipo) |> summarise(media = mean(area))
for (i in 1:3) {
    print(paste("La media del area para", tipos[i], "es de", round(df_media[i, 'media'],2)))
  }


```

#### PREGUNTA 4

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: Este tipo de gráfico se llama **boxplot**. La línea del centro representa la **mediana**.

#### PREGUNTA 5

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
library(ggplot2)
ggplot(df_seeds, aes(x=compacto, y=area)) + geom_point(aes(color=tipo), alpha=0.7)
```

#### PREGUNTA 6

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: '' Esta línea añade al dataframe df_seeds una columna llamada "is_kama" que va a contener valores booleanos TRUE / FALSE dependiendo de si el valor en la columna "tipo" es "Kama" o no.

#### PREGUNTA 7

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: Es aconsejable dividir el dataset en train y test para poder mejor evaluar el rendimiento del modelo (p.ej. su precisión y exhaustividad). Sin esta división evaluaríamos el rendimiento del modelo sobre los datos que ya conoce, lo que podría dar nominalmente unos buenos resultados en caso de overfitting. En casos de overfitting el modelo no generaliza lo suficiente y predice bien para los datos que ya conoce, pero no logra predecir bien para nuevos datos.

#### PREGUNTA 8

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: '' Para la clasificación binaria podríamos usar el modelo de **regresión logística.**

#### PREGUNTA 9

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
model_rl <- glm(data=df_seeds_train,formula=is_kama~area+perimetro+compacto+longitud+coeficient.asimetria+longitud.ranura,family=binomial(link='logit'))
summary(model_rl)
```

#### PREGUNTA 10

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}

pred <- predict(model_rl, df_seeds_test)

M = table(real=df_seeds_test$is_kama, predicted=pred > 0)

paste("La precisión del modelo es:",M[2,2]/(M[1,2]+M[2,2]))
paste("La exhaustividad del modelo es:",M[2,2]/(M[2,1]+M[2,2]))
```

#### PREGUNTA 11

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: '' Primero se establece una semilla para generar números pseudo-aleatorios. Luego seleccionamos las columnas area, perimetro, compacto, longitud, anchura, coeficient.asimetria, longitud.ranura y creamos con ellas un modelo de clustering con método k-means que va a encontrar 3 clusters. En la última línea comparamos los datos reales sobre el tipo con los clusters encontrados para ver si esta explicación puede dar sentido a los clusters encontrados.
